#importando as bibliotecas

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import plotly.express as px
import locale
import plotly.io as pio
import requests
from geojson_rewind import rewind
import json
from PIL import Image

#carregando os dados
df = pd.read_csv('df_indice_pps_streamlit.csv')
georreferenciamento_df = pd.read_csv('georreferenciamento_df.csv')
with open('geojson', 'r') as geojson_file:
    geojson = json.load(geojson_file)

st.set_page_config(
    page_title='Presen√ßa das Pol√≠ticas P√∫blicas Sociais nos munic√≠pios brasileiros :earth_americas:',
    page_icon='üìä',
    layout='wide',
    initial_sidebar_state='expanded',
    menu_items={
        'Get Help': 'http://www.meusite.com.br',
        'Report a bug': "http://www.meuoutrosite.com.br",
        'About': "Esse app foi desenvolvido no curso ENAP ."
    }
)

st.markdown('# Presen√ßa das pol√≠ticas p√∫blicas sociais nos munic√≠pios brasileiros :earth_americas:')


#criando as caixas de sele√ß√£o
escolha = st.sidebar.selectbox("Deseja filtrar os resultados?", ['N√£o', 'Sim'])
df_filtrado = df
if escolha == 'Sim':
    lista_regioes = df['Regiao'].unique().tolist()
    lista_regioes.insert(0, "Marcar Todos")
    regiao_selecionada = st.sidebar.selectbox("Selecione uma regi√£o:", lista_regioes)

    if regiao_selecionada != "Marcar Todos":
        df_filtrado = df[df['Regiao'] == regiao_selecionada]

        lista_estados = df_filtrado['ufSigla'].unique().tolist()
        lista_estados.insert(0, "Marcar Todos")
        estado_selecionado = st.sidebar.selectbox("Selecione um estado:", lista_estados)

        if estado_selecionado != "Marcar Todos":
            df_filtrado = df_filtrado[df_filtrado['ufSigla'] == estado_selecionado]

            lista_municipios = df_filtrado['Munic√≠pio_UF'].unique().tolist()
            lista_municipios.insert(0, "Marcar Todos")
            municipio_selecionado = st.sidebar.selectbox("Selecione um munic√≠pio:", lista_municipios)

            if municipio_selecionado != "Marcar Todos":
                df_filtrado = df_filtrado[df_filtrado['Munic√≠pio_UF'] == municipio_selecionado]


#criando um espa√ßo entre as visualiza√ß√µes
st.text("")

#criando o texto explicativo
st.write(
    """
    <div style="text-align: justify">
<p> Para a avalia√ß√£o da presen√ßa das Pol√≠ticas P√∫blicas Sociais (PPS) nos munic√≠pios brasileiros, foram selecionadas pol√≠ticas de responsabilidade do Minist√©rio do Desenvolvimento e Assist√™ncia Social, Fam√≠lia e Combate √† Fome (MDS), que fossem universais e cujos dados estivessem disponibilizados no Portal de Dados Abertos. 

</p> Desta forma, foram selecionadas tr√™s pol√≠ticas e um indicador: Programa Bolsa Fam√≠lia (PBF), Benef√≠cio de Presta√ß√£o Continuada (BPC), Registro Mensal de Atendimentos dos  Centros de Refer√™ncia da Assist√™ncia Social (CRAS) e o √çndice de Gest√£o Descentralizada Municipal (IGD-M), o qual mede a qualidade da gest√£o do Cadastro √önico e do PBF. 

</p> Para avaliar a presen√ßa das PPS selecionadas em cada um dos munic√≠pios brasileiros, foi definido um √≠ndice composto pelo resultado da an√°lise da presen√ßa de cada uma das pol√≠ticas, cujo detalhamento consta nas p√°ginas espec√≠ficas das pol√≠ticas. 

</p> Cada munic√≠pio poderia pontuar de 0 a 10 pontos, de acordo com o resultado do √çndice da presen√ßa das PPS nos munic√≠pios brasileiros, conforme apresentado nos gr√°ficos abaixo. </p>
</div>    
    """,
    unsafe_allow_html=True
)


#criando um espa√ßo entre as visualiza√ß√µes
st.text("")

#criando os cart√µes com os valores totais do BPC, FPM e total de beneficiados
#col1, col2= st.columns(2)

# #with col1 :
#     st.write(
#         """
#         <h2 style="font-size: 24px;">XXX</h2>
#         """,
#         unsafe_allow_html=True
#     )
#     #st.write("{:,}".format(df_filtrado['qtd_fam_beneficiadas'].sum()))
# with col2:
## GR√ÅFICO do √≠ndice
# AJUSTA o dataframe
contagem_valores = df_filtrado['indice_pps'].value_counts()
df_contagem_valores = pd.DataFrame(contagem_valores)
df_contagem_valores.reset_index(inplace = True)
    
# CRIA o gr√°fico
fig = px.bar(df_contagem_valores, x='indice_pps', y='count',
            title="√çndice da Presen√ßa de Pol√≠ticas P√∫blicas Sociais nos Munic√≠pios")
    
# PERSONALIZAR o gr√°fico
fig.update_yaxes(title_text='N¬∫ de munic√≠pios',
                    # title_textfont =dict(size=20),
                    tickfont=dict(size=18) # Tamanho da fonte 
    )
    
fig.update_xaxes(
        title_text='√çndice Presen√ßa de Pol√≠ticas P√∫blicas',
        tickvals=[1,2,3,4,5,6,7,8,9,10],  # Valores reais
        ticktext=['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],  # R√≥tulos personalizados
        tickangle=0,  # Rota√ß√£o dos r√≥tulos
        tickfont=dict(size=18)# Tamanho da fonte
    )
# EXIBIR o gr√°fico
#st.header("√çndice de Presen√ßa de Pol√≠ticas P√∫blicas nos Munic√≠pios (1-10)")
fig.update_layout(title_x=0.3)
st.plotly_chart(fig, use_container_width=True)
    
#criando um espa√ßo entre as visualiza√ß√µes
st.text("")
    

# MAPA
# c√≥pia segura
resultados_df = df_filtrado.copy()
# dataframe info geogr√°ficas dos munic√≠pios
resultados_df = pd.merge(df_filtrado[['ibge_6', 'indice_pps']],
                         georreferenciamento_df[['codigo_ibge', 'nome', 'latitude', 'longitude']],
                         left_on='ibge_6',
                         right_on='codigo_ibge',
                         how='inner')

# COROPL√âTICO 
#pio.renderers.default = 'iframe'
fig2 = px.choropleth(resultados_df,
                    geojson=geojson,
                    title="√çndice da Presen√ßa de Pol√≠ticas P√∫blicas Sociais nos Munic√≠pios",
                    scope='south america',
                    color='indice_pps',
                    color_continuous_scale="Reds",
                    locations='ibge_6',
                    featureidkey='properties.codarea',
                    hover_name='nome').update_layout(height=800, width=1000, autosize=False)

fig2.update_layout(title_x=0.3, title_y=0.9)
fig2.update_traces(marker_line_width=0)
fig2.update_geos(fitbounds="locations", visible=False)

# Exibir o gr√°fico no Streamlit
#st.header("√çndice de Presen√ßa de Pol√≠ticas P√∫blicas nos Munic√≠pios (0-10)")
st.plotly_chart(fig2, use_container_width = True)

#criando um espa√ßo entre as visualiza√ß√µes
st.text("")

st.subheader('**Autoras do projeto**') 

st.write(
    """
    <div style="text-align: justify">
<p> - Aline Oliveira Moura
<p> - Camila Abuassi de Faro Passos 
<p> - Cristiane Lopes de Assis 
<p> - Juliana Pierrobon Lopez 
<p> - Mariana Nogueira de Resende Sousa   
    """,
    unsafe_allow_html=True
)